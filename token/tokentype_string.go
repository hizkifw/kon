// Code generated by "stringer -type TokenType -trimprefix Token"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenUnknown-0]
	_ = x[TokenWhitespace-1]
	_ = x[TokenComment-2]
	_ = x[TokenIdent-3]
	_ = x[TokenParenO-4]
	_ = x[TokenParenC-5]
	_ = x[TokenBracketO-6]
	_ = x[TokenBracketC-7]
	_ = x[TokenBraceO-8]
	_ = x[TokenBraceC-9]
	_ = x[TokenSemi-10]
	_ = x[TokenScope-11]
	_ = x[TokenComma-12]
	_ = x[TokenPeriod-13]
	_ = x[TokenNumLiteral-14]
	_ = x[TokenStrLiteral-15]
	_ = x[startTokenKeywords-16]
	_ = x[TokenFunctionKw-17]
	_ = x[TokenIfKw-18]
	_ = x[TokenReturnKw-19]
	_ = x[TokenTypeKw-20]
	_ = x[TokenStructKw-21]
	_ = x[endTokenKeywords-22]
	_ = x[TokenBang-23]
	_ = x[TokenPlus-24]
	_ = x[TokenMinus-25]
	_ = x[TokenDiv-26]
	_ = x[TokenMult-27]
	_ = x[TokenLT-28]
	_ = x[TokenLTE-29]
	_ = x[TokenGT-30]
	_ = x[TokenGTE-31]
	_ = x[TokenAssign-32]
	_ = x[TokenEqual-33]
	_ = x[TokenLogicalAnd-34]
	_ = x[TokenLogicalOr-35]
	_ = x[TokenBitwiseAnd-36]
	_ = x[TokenBitwiseOr-37]
	_ = x[TokenArrowR-38]
	_ = x[totalTokens-39]
}

const _TokenType_name = "UnknownWhitespaceCommentIdentParenOParenCBracketOBracketCBraceOBraceCSemiScopeCommaPeriodNumLiteralStrLiteralstartTokenKeywordsFunctionKwIfKwReturnKwTypeKwStructKwendTokenKeywordsBangPlusMinusDivMultLTLTEGTGTEAssignEqualLogicalAndLogicalOrBitwiseAndBitwiseOrArrowRtotalTokens"

var _TokenType_index = [...]uint16{0, 7, 17, 24, 29, 35, 41, 49, 57, 63, 69, 73, 78, 83, 89, 99, 109, 127, 137, 141, 149, 155, 163, 179, 183, 187, 192, 195, 199, 201, 204, 206, 209, 215, 220, 230, 239, 249, 258, 264, 275}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
